
components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        mailingAddress:
          type: string
        gsitn:
          type: string
        userType:
          type: string
          enum:
            - user
            - company
        phoneNo:
          type: string
        subscriptionPlanId:
          type: string
        emailVerified:
          type: boolean
        emailToken:
          type: string
        role:
          type: string
          enum:
            - user
            - admin
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        firstName: firstName
        lastName: lastName
        mailingAddress: fake address
        gsitn: GSITN
        userType: user
        phoneNo: +1-1234-123-12
        subscriptionPlanId: 1
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: '2020-05-12T16:18:04.793Z'
    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Project:
      type: object
      properties:
        id:
          type: string
        projectName:
          type: string
        projectType:
          type: string
        projectDescription:
          type: string
        location:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 5ebac534954b54139806c112
        projectName: fake project
        projectType: 5ebac534954b54139806c112 id of definition
        projectDescription: fake description
        location: fake address
        userId: 5ebac534954b54139806c112
        createdAt: 2020-05-12T16:18:04.793Z
        updatedAt: 2020-05-12T16:18:04.793Z

    Plot:
      type: object
      properties:
        id:
          type: string
        imagePath:
          type: string
        rhinoPath:
          type: string
        projectId:
          type: string
        userId:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 5ebac534954b54139806c112
        imagePath: path of image
        rhinoPath: path of image
        projectId: 5ebac534954b54139806c112
        userId: 5ebac534954b54139806c112
        isActive: true
        createdAt: 2020-05-12T16:18:04.793Z
        updatedAt: 2020-05-12T16:18:04.793Z

    ExportPlot:
      type: object
      properties:
        id:
          type: string
        pdfPath:
          type: string
        imagePath:
          type: string
        plotId:
          type: string
        projectId:
          type: string
        inputParam:
          type: object
        outputParam:
          type: object
        isActive:
          type: boolean
        versionName:
          type: string
        versionNumber:
          type: number    
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 5ebac534954b54139806c112
        projectId: 5ebac534954b54139806c112
        plotId: 5ebac534954b54139806c112
        createdAt: 2020-05-12T16:18:04.793Z
        updatedAt: 2020-05-12T16:18:04.793Z

    Definition:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        purpose:
          type: string
          enum:
            - projectType
            - convertImage
        fileName:
          type: string
        path:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 5ebac534954b54139806c112
        type: Apartment
        fileName: fake file name
        path: path of file
        createdAt: 2020-05-12T16:18:04.793Z
        updatedAt: 2020-05-12T16:18:04.793Z

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Subscription:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        discount:
          type: number
          format: double
        isActive:
          type: boolean
        discountFrom:
          type: string
          format: date and time
        discountTo:
          type: string
          format: date and time
        discountFor:
          type: array
          items:
            type: string
        discountType:
         type: string
         enum:
          - flat
          - percentage
        allowedFeaturesId:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id:6ebac534954b54139806c112
        name:Premium plan
        description:Premium plan
        discount:200.00
        isActive:true
        discountFrom:"2020-05-12T16:18:04.793Z"
        discountTo:"2020-05-12T16:18:04.793Z"
        discountFor:["userId"]
        discountType:flat
        allowedFeaturesId:["featureId"]
        createdAt:"2020-05-12T16:18:04.793Z"
        updatedAt:"2020-05-12T16:18:04.793Z"

    PaymentGateway:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        userPaymentMethodId:
          type: string
        userSubscriptionId:
          type: string
        transactionId:
          type: number
        total:
          type: number
          format: double
        status:
          type: string
          enum:
            - pending
            - fail
            - paid
        currencyType:
          type: string
        pdfName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id:7ebac534954b54139806c112
        userId:5ebac534954b54139806c112
        userPaymentMethodId:UPI
        userSubscriptionId:6ebac534954b54139806c112
        transactionId:6ebac534954b54139806c112
        total:400.00
        status:pending
        currencyType:usd
        pdfName:pdf path
        createdAt:'2020-05-12T16:18:04.793Z'
        updatedAt:'2020-05-12T16:18:04.793Z'

    UserPaymentMethod:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        stripeCustomerId:
          type: string
        stripeCardId:
          type: string
        isDefault:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id:7ebac534954b54139806c112
        userId:5ebac534954b54139806c112
        stripeCustomerId:5ebac534954b54139806c112
        stripeCardId:5ebac534954b54139806c112
        isDefault:true
        created_at:'2020-05-12T16:18:04.793Z'
        updated_at:'2020-05-12T16:18:04.793Z'

    UserSubscription:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        subscriptionId:
          type: string
        isActive:
          type: boolean
        isSubscribe:
          type: boolean
        markAsDelete:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id:7ebac534954b54139806c112
        userId:5ebac534954b54139806c112
        subscriptionId:6ebac534954b54139806c112
        isActive:true
        markAsDelete:false
        createdAt:'2020-05-12T16:18:04.793Z'
        updatedAt:'2020-05-12T16:18:04.793Z'

    Support:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        comment:
          type: string
        createdAt:
          type: string
          format: date-time
      example:
        id:7ebac534954b54139806c112
        userId:7ebac534954b54139806c112
        comment:any detail or query
        created_at:'2020-05-12T16:18:04.793Z'

    Feature:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          enum:
            - export3D
            - interactWithInput
            - output
            - exportReport
            - financialFeasibility
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id:7ebac534954b54139806c112
        userId:7ebac534954b54139806c112
        comment:any detail or query
        created_at:'2020-05-12T16:18:04.793Z'

  responses:
    Error400:
      description: Request failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Request failed
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
